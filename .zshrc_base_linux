# .zshrc
#
# Source global definitions
if [ -f /etc/zshrc ]; then
	. /etc/zshrc
fi

# Path specs
export PATH=$PATH:~/scripts


## first: OH-MY-ZSH CONFIG
# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Would you like to use another custom folder than $ZSH/custom?
export ZSH_CUSTOM="$HOME/.oh-my-zsh/custom"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="false"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
HIST_STAMPS="yyyy-mm-dd"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"


# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  zsh-vi-mode
  zsh-autosuggestions
  iterm2
  python
  tmux
)

# config for iterm2 zsh integration
zstyle :omz:plugins:iterm2 shell-integration yes

# Config for zsh-vi-mode
export ZVM_VI_EDITOR=nvim

source $ZSH/oh-my-zsh.sh

# Tab completion for ssh hosts in .ssh/config file
zstyle ':completion:*:hosts' hosts $( cat ~/.ssh/config 2>/dev/null | grep '^Host ' | cut -d ' ' -f 2 )

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Config autosuggestions
#ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#6A5E59,bg=#312C2B"
#ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#6A5E59"

## second: STANDARD CONFIG
# User specific aliases

if [ -f ~/.aliases ]; then
  . ~/.aliases
fi

# User functions
function cdl() {
  cd "$@"
  ll
}

# Use vim (nvim with alises)
export EDITOR=nvim

# for CUDA
export CUDA_HOME=/usr/local/cuda

# CUDNN library path
export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64"

# function to fix ssh stuff in tmux after reconnecting
fixssh() {
  eval $(tmux show-env    \
    |sed -n 's/^\(SSH_[^=]*\)=\(.*\)/export \1="\2"/p')
}

# colors
# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# History file parameters
HISTSIZ=10000
HISTFILESIZE=200000

# Set typewritten ZSH as a prompt
# Typewritten config
export TYPEWRITTEN_COLOR_MAPPINGS="primary:#9FA0E1;secondary:#81D0C9;accent:#E4E3E1;notice:#F0C66F;info_negative:#F86882;info_positive:#A6CD77;info_neutral_1:#F0C66F;info_neutral_2:#81D0C9;info_special:#F08D71"
export TYPEWRITTEN_RELATIVE_PATH="adaptive"
export TYPEWRITTEN_PROMPT_LAYOUT="singleline_verbose"
